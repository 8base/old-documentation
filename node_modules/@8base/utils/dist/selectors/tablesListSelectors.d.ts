import { TableSchema, FieldSchema, Application } from '../types';
import { ParametricSelector } from 'reselect';
export declare const getTableList: (tables?: TableSchema[] | undefined) => TableSchema[];
export declare const getTableById: ParametricSelector<TableSchema[], string, TableSchema | void>;
export declare const getTableByName: ParametricSelector<TableSchema[], any, TableSchema | void>;
export declare const getTableApplication: ParametricSelector<TableSchema[], string, Application | void>;
export declare const getTableFields: ParametricSelector<TableSchema[], string, FieldSchema[]>;
export declare const getTableApplicationName: ParametricSelector<TableSchema[], string, string>;
export declare const getNoSystemTables: ParametricSelector<TableSchema[], void, TableSchema[]>;
export declare const getSystemTables: ParametricSelector<TableSchema[], void, TableSchema[]>;
export declare const hasNoSystemTables: ParametricSelector<TableSchema[], void, boolean>;
export declare const getTablesByApplicationName: import("reselect").OutputSelector<TableSchema[] & string, TableSchema[], (res1: TableSchema[], res2: string) => TableSchema[]>;
export declare const getUserTables: ParametricSelector<TableSchema[], void, TableSchema[]>;
export declare const hasUserTables: ParametricSelector<TableSchema[], void, boolean>;
//# sourceMappingURL=tablesListSelectors.d.ts.map