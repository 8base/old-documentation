"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const ramda_1 = __importDefault(require("ramda"));
const reselect_1 = require("reselect");
exports.getTableList = (tables) => tables || [];
exports.getTableById = reselect_1.createSelector(exports.getTableList, (_, tableId) => tableId, (tables, tableId) => tables && tables.find(({ id }) => id === tableId));
exports.getTableByName = reselect_1.createSelector(exports.getTableList, (_, tableName) => tableName, (_, __, applicationName) => applicationName, (tables, tableName, applicationName) => tables &&
    tables
        .filter(({ application }) => application && applicationName
        ? application.name.toLowerCase() === applicationName.toLowerCase()
        : !applicationName)
        .find(({ name }) => name.toLowerCase() === tableName.toLowerCase()));
exports.getTableApplication = reselect_1.createSelector(exports.getTableById, table => table && table.application);
exports.getTableFields = reselect_1.createSelector(exports.getTableById, table => (table ? table.fields : []));
exports.getTableApplicationName = reselect_1.createSelector(exports.getTableApplication, table => (table ? table.name : ''));
exports.getNoSystemTables = reselect_1.createSelector(exports.getTableList, tablesList => tablesList.filter(ramda_1.default.propEq('isSystem', false)));
exports.getSystemTables = reselect_1.createSelector(exports.getTableList, tablesList => tablesList.filter(ramda_1.default.propEq('isSystem', true)));
exports.hasNoSystemTables = reselect_1.createSelector(exports.getNoSystemTables, tables => tables.length > 0);
exports.getTablesByApplicationName = reselect_1.createSelector(exports.getTableList, (applicationName) => applicationName, (tablesList, applicationName) => tablesList.filter(({ application }) => application && application.name === applicationName));
exports.getUserTables = reselect_1.createSelector(exports.getTableList, tablesList => tablesList.filter(({ isSystem, application }) => !isSystem && !application));
exports.hasUserTables = reselect_1.createSelector(exports.getUserTables, tables => tables.length > 0);
//# sourceMappingURL=tablesListSelectors.js.map