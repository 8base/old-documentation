import * as auth0 from 'auth0-js';
import { AuthState, AuthData, IAuthClient, IAuthorizable } from '@8base/utils';
export declare type WebAuth0AuthClientOptions = {
    domain: string;
    clientId: string;
    redirectUri: string;
    logoutRedirectUri: string;
};
/**
 * Create instacne of the web auth0 auth client.
 * @param {string} domain Domain. See auth0 documentation.
 * @param {string} clientId Client id. See auth0 documentation.
 * @param {string} redirectUri Redurect uri. See auth0 documentation.
 */
declare class WebAuth0AuthClient implements IAuthClient, IAuthorizable {
    auth0: auth0.WebAuth;
    logoutRedirectUri?: string;
    constructor(options: WebAuth0AuthClientOptions);
    authorize: (options?: object) => Promise<void>;
    renewToken: (options?: object) => Promise<AuthData>;
    changePassword: () => Promise<{
        email: string;
    }>;
    getAuthorizedData: () => Promise<AuthData>;
    setAuthState: (state: AuthState) => Promise<void>;
    getAuthState: () => Promise<AuthState>;
    purgeAuthState: ({ withLogout, logoutOptions }?: {
        withLogout?: boolean | undefined;
        logoutOptions?: {} | undefined;
    }) => Promise<void>;
    checkIsAuthorized: () => Promise<boolean>;
    logout: (options?: object) => Promise<void>;
}
export { WebAuth0AuthClient };
//# sourceMappingURL=WebAuth0AuthClient.d.ts.map